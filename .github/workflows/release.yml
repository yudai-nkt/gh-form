name: Publish a new release
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

env:
  TAG: ${{ github.ref_name }}

jobs:
  release-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build for Intel Mac
        uses: cli/gh-extension-precompile@v1
        with:
          build_script_override: "script/build.sh"
        env:
          TARGET: x86_64-apple-darwin
          OS_ARCH_EXT: darwin-amd64
      # The gh-extension-precomiple does not support release from multiple jobs.
      # cf. https://github.com/KOBA789/gh-sql/pull/4/commits/fe30d12dbac9afdb662ad09552fc65ef469d4712
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
      - name: Build for Apple Silicon Mac
        run: bash script/build.sh
        env:
          TARGET: aarch64-apple-darwin
          OS_ARCH_EXT: darwin-arm64
      - name: Add binary to release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
          prerelease: false
          files: |
            dist/gh-form_${{ env.TAG }}_darwin-arm64
  release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build for x86-64 Linux
        run: bash script/build.sh
        env:
          TARGET: x86_64-unknown-linux-gnu
          OS_ARCH_EXT: linux-amd64
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
      - run: sudo apt install gcc-aarch64-linux-gnu
      - name: Build for ARM Linux
        run: bash script/build.sh
        env:
          TARGET: aarch64-unknown-linux-gnu
          OS_ARCH_EXT: linux-arm64
      - name: Add binaries to release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: |
            dist/gh-form_${{ env.TAG }}_linux-amd64
            dist/gh-form_${{ env.TAG }}_linux-arm64
  release-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build for x86-64 Windows
        run: bash script/build.sh
        env:
          TARGET: x86_64-pc-windows-msvc
          OS_ARCH_EXT: windows-amd64.exe
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-pc-windows-msvc
      - name: Build for ARM Windows
        run: bash script/build.sh
        env:
          TARGET: aarch64-pc-windows-msvc
          OS_ARCH_EXT: windows-arm64.exe
      - name: Add binaries to release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: |
            dist/gh-form_${{ env.TAG }}_windows-amd64.exe
            dist/gh-form_${{ env.TAG }}_windows-arm64.exe
  publish-to-cargo-registry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
